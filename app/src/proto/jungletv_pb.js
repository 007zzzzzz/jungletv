// source: jungletv.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.jungletv.ConsumeMediaRequest', null, global);
goog.exportSymbol('proto.jungletv.EnqueueMediaFailure', null, global);
goog.exportSymbol('proto.jungletv.EnqueueMediaRequest', null, global);
goog.exportSymbol('proto.jungletv.EnqueueMediaRequest.MediaInfoCase', null, global);
goog.exportSymbol('proto.jungletv.EnqueueMediaResponse', null, global);
goog.exportSymbol('proto.jungletv.EnqueueMediaResponse.EnqueueResponseCase', null, global);
goog.exportSymbol('proto.jungletv.EnqueueMediaTicket', null, global);
goog.exportSymbol('proto.jungletv.EnqueueMediaTicket.MediaInfoCase', null, global);
goog.exportSymbol('proto.jungletv.EnqueueMediaTicketStatus', null, global);
goog.exportSymbol('proto.jungletv.EnqueueStubData', null, global);
goog.exportSymbol('proto.jungletv.EnqueueYouTubeVideoData', null, global);
goog.exportSymbol('proto.jungletv.ForcedTicketEnqueueType', null, global);
goog.exportSymbol('proto.jungletv.ForciblyEnqueueTicketRequest', null, global);
goog.exportSymbol('proto.jungletv.ForciblyEnqueueTicketResponse', null, global);
goog.exportSymbol('proto.jungletv.MediaConsumptionCheckpoint', null, global);
goog.exportSymbol('proto.jungletv.MediaConsumptionCheckpoint.MediaInfoCase', null, global);
goog.exportSymbol('proto.jungletv.MonitorQueueRequest', null, global);
goog.exportSymbol('proto.jungletv.MonitorTicketRequest', null, global);
goog.exportSymbol('proto.jungletv.NowPlayingStubData', null, global);
goog.exportSymbol('proto.jungletv.NowPlayingYouTubeVideoData', null, global);
goog.exportSymbol('proto.jungletv.Queue', null, global);
goog.exportSymbol('proto.jungletv.QueueEntry', null, global);
goog.exportSymbol('proto.jungletv.QueueEntry.MediaInfoCase', null, global);
goog.exportSymbol('proto.jungletv.QueueYouTubeVideoData', null, global);
goog.exportSymbol('proto.jungletv.RemoveQueueEntryRequest', null, global);
goog.exportSymbol('proto.jungletv.RemoveQueueEntryResponse', null, global);
goog.exportSymbol('proto.jungletv.RewardInfoRequest', null, global);
goog.exportSymbol('proto.jungletv.RewardInfoResponse', null, global);
goog.exportSymbol('proto.jungletv.SignInRequest', null, global);
goog.exportSymbol('proto.jungletv.SignInResponse', null, global);
goog.exportSymbol('proto.jungletv.SubmitActivityChallengeRequest', null, global);
goog.exportSymbol('proto.jungletv.SubmitActivityChallengeResponse', null, global);
goog.exportSymbol('proto.jungletv.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.SignInRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.SignInRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.SignInRequest.displayName = 'proto.jungletv.SignInRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.SignInResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.SignInResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.SignInResponse.displayName = 'proto.jungletv.SignInResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.EnqueueYouTubeVideoData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.EnqueueYouTubeVideoData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.EnqueueYouTubeVideoData.displayName = 'proto.jungletv.EnqueueYouTubeVideoData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.EnqueueStubData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.EnqueueStubData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.EnqueueStubData.displayName = 'proto.jungletv.EnqueueStubData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.EnqueueMediaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.jungletv.EnqueueMediaRequest.oneofGroups_);
};
goog.inherits(proto.jungletv.EnqueueMediaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.EnqueueMediaRequest.displayName = 'proto.jungletv.EnqueueMediaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.EnqueueMediaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.jungletv.EnqueueMediaResponse.oneofGroups_);
};
goog.inherits(proto.jungletv.EnqueueMediaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.EnqueueMediaResponse.displayName = 'proto.jungletv.EnqueueMediaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.EnqueueMediaFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.EnqueueMediaFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.EnqueueMediaFailure.displayName = 'proto.jungletv.EnqueueMediaFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.EnqueueMediaTicket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.jungletv.EnqueueMediaTicket.oneofGroups_);
};
goog.inherits(proto.jungletv.EnqueueMediaTicket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.EnqueueMediaTicket.displayName = 'proto.jungletv.EnqueueMediaTicket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.MonitorTicketRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.MonitorTicketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.MonitorTicketRequest.displayName = 'proto.jungletv.MonitorTicketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.ConsumeMediaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.ConsumeMediaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.ConsumeMediaRequest.displayName = 'proto.jungletv.ConsumeMediaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.NowPlayingStubData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.NowPlayingStubData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.NowPlayingStubData.displayName = 'proto.jungletv.NowPlayingStubData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.NowPlayingYouTubeVideoData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.NowPlayingYouTubeVideoData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.NowPlayingYouTubeVideoData.displayName = 'proto.jungletv.NowPlayingYouTubeVideoData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.MediaConsumptionCheckpoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.jungletv.MediaConsumptionCheckpoint.oneofGroups_);
};
goog.inherits(proto.jungletv.MediaConsumptionCheckpoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.MediaConsumptionCheckpoint.displayName = 'proto.jungletv.MediaConsumptionCheckpoint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.MonitorQueueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.MonitorQueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.MonitorQueueRequest.displayName = 'proto.jungletv.MonitorQueueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.Queue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jungletv.Queue.repeatedFields_, null);
};
goog.inherits(proto.jungletv.Queue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.Queue.displayName = 'proto.jungletv.Queue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.QueueYouTubeVideoData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.QueueYouTubeVideoData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.QueueYouTubeVideoData.displayName = 'proto.jungletv.QueueYouTubeVideoData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.QueueEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.jungletv.QueueEntry.oneofGroups_);
};
goog.inherits(proto.jungletv.QueueEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.QueueEntry.displayName = 'proto.jungletv.QueueEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.User.displayName = 'proto.jungletv.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.RewardInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.RewardInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.RewardInfoRequest.displayName = 'proto.jungletv.RewardInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.RewardInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.RewardInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.RewardInfoResponse.displayName = 'proto.jungletv.RewardInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.RemoveQueueEntryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.RemoveQueueEntryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.RemoveQueueEntryRequest.displayName = 'proto.jungletv.RemoveQueueEntryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.RemoveQueueEntryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.RemoveQueueEntryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.RemoveQueueEntryResponse.displayName = 'proto.jungletv.RemoveQueueEntryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.ForciblyEnqueueTicketRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.ForciblyEnqueueTicketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.ForciblyEnqueueTicketRequest.displayName = 'proto.jungletv.ForciblyEnqueueTicketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.ForciblyEnqueueTicketResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.ForciblyEnqueueTicketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.ForciblyEnqueueTicketResponse.displayName = 'proto.jungletv.ForciblyEnqueueTicketResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.SubmitActivityChallengeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.SubmitActivityChallengeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.SubmitActivityChallengeRequest.displayName = 'proto.jungletv.SubmitActivityChallengeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jungletv.SubmitActivityChallengeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.jungletv.SubmitActivityChallengeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jungletv.SubmitActivityChallengeResponse.displayName = 'proto.jungletv.SubmitActivityChallengeResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.SignInRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.SignInRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.SignInRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.SignInRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewardAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.SignInRequest}
 */
proto.jungletv.SignInRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.SignInRequest;
  return proto.jungletv.SignInRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.SignInRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.SignInRequest}
 */
proto.jungletv.SignInRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.SignInRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.SignInRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.SignInRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.SignInRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewardAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string reward_address = 1;
 * @return {string}
 */
proto.jungletv.SignInRequest.prototype.getRewardAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.SignInRequest} returns this
 */
proto.jungletv.SignInRequest.prototype.setRewardAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.SignInResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.SignInResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.SignInResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.SignInResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    authToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tokenExpiration: (f = msg.getTokenExpiration()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.SignInResponse}
 */
proto.jungletv.SignInResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.SignInResponse;
  return proto.jungletv.SignInResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.SignInResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.SignInResponse}
 */
proto.jungletv.SignInResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthToken(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTokenExpiration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.SignInResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.SignInResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.SignInResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.SignInResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTokenExpiration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string auth_token = 1;
 * @return {string}
 */
proto.jungletv.SignInResponse.prototype.getAuthToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.SignInResponse} returns this
 */
proto.jungletv.SignInResponse.prototype.setAuthToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp token_expiration = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.jungletv.SignInResponse.prototype.getTokenExpiration = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.jungletv.SignInResponse} returns this
*/
proto.jungletv.SignInResponse.prototype.setTokenExpiration = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.SignInResponse} returns this
 */
proto.jungletv.SignInResponse.prototype.clearTokenExpiration = function() {
  return this.setTokenExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.SignInResponse.prototype.hasTokenExpiration = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.EnqueueYouTubeVideoData.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.EnqueueYouTubeVideoData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.EnqueueYouTubeVideoData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueYouTubeVideoData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.EnqueueYouTubeVideoData}
 */
proto.jungletv.EnqueueYouTubeVideoData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.EnqueueYouTubeVideoData;
  return proto.jungletv.EnqueueYouTubeVideoData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.EnqueueYouTubeVideoData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.EnqueueYouTubeVideoData}
 */
proto.jungletv.EnqueueYouTubeVideoData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.EnqueueYouTubeVideoData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.EnqueueYouTubeVideoData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.EnqueueYouTubeVideoData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueYouTubeVideoData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.jungletv.EnqueueYouTubeVideoData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.EnqueueYouTubeVideoData} returns this
 */
proto.jungletv.EnqueueYouTubeVideoData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.EnqueueStubData.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.EnqueueStubData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.EnqueueStubData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueStubData.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.EnqueueStubData}
 */
proto.jungletv.EnqueueStubData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.EnqueueStubData;
  return proto.jungletv.EnqueueStubData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.EnqueueStubData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.EnqueueStubData}
 */
proto.jungletv.EnqueueStubData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.EnqueueStubData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.EnqueueStubData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.EnqueueStubData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueStubData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.jungletv.EnqueueMediaRequest.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.jungletv.EnqueueMediaRequest.MediaInfoCase = {
  MEDIA_INFO_NOT_SET: 0,
  STUB_DATA: 2,
  YOUTUBE_VIDEO_DATA: 3
};

/**
 * @return {proto.jungletv.EnqueueMediaRequest.MediaInfoCase}
 */
proto.jungletv.EnqueueMediaRequest.prototype.getMediaInfoCase = function() {
  return /** @type {proto.jungletv.EnqueueMediaRequest.MediaInfoCase} */(jspb.Message.computeOneofCase(this, proto.jungletv.EnqueueMediaRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.EnqueueMediaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.EnqueueMediaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.EnqueueMediaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueMediaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    unskippable: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    stubData: (f = msg.getStubData()) && proto.jungletv.EnqueueStubData.toObject(includeInstance, f),
    youtubeVideoData: (f = msg.getYoutubeVideoData()) && proto.jungletv.EnqueueYouTubeVideoData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.EnqueueMediaRequest}
 */
proto.jungletv.EnqueueMediaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.EnqueueMediaRequest;
  return proto.jungletv.EnqueueMediaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.EnqueueMediaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.EnqueueMediaRequest}
 */
proto.jungletv.EnqueueMediaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnskippable(value);
      break;
    case 2:
      var value = new proto.jungletv.EnqueueStubData;
      reader.readMessage(value,proto.jungletv.EnqueueStubData.deserializeBinaryFromReader);
      msg.setStubData(value);
      break;
    case 3:
      var value = new proto.jungletv.EnqueueYouTubeVideoData;
      reader.readMessage(value,proto.jungletv.EnqueueYouTubeVideoData.deserializeBinaryFromReader);
      msg.setYoutubeVideoData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.EnqueueMediaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.EnqueueMediaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.EnqueueMediaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueMediaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnskippable();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getStubData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.jungletv.EnqueueStubData.serializeBinaryToWriter
    );
  }
  f = message.getYoutubeVideoData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.jungletv.EnqueueYouTubeVideoData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool unskippable = 1;
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaRequest.prototype.getUnskippable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.jungletv.EnqueueMediaRequest} returns this
 */
proto.jungletv.EnqueueMediaRequest.prototype.setUnskippable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional EnqueueStubData stub_data = 2;
 * @return {?proto.jungletv.EnqueueStubData}
 */
proto.jungletv.EnqueueMediaRequest.prototype.getStubData = function() {
  return /** @type{?proto.jungletv.EnqueueStubData} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.EnqueueStubData, 2));
};


/**
 * @param {?proto.jungletv.EnqueueStubData|undefined} value
 * @return {!proto.jungletv.EnqueueMediaRequest} returns this
*/
proto.jungletv.EnqueueMediaRequest.prototype.setStubData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.jungletv.EnqueueMediaRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.EnqueueMediaRequest} returns this
 */
proto.jungletv.EnqueueMediaRequest.prototype.clearStubData = function() {
  return this.setStubData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaRequest.prototype.hasStubData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EnqueueYouTubeVideoData youtube_video_data = 3;
 * @return {?proto.jungletv.EnqueueYouTubeVideoData}
 */
proto.jungletv.EnqueueMediaRequest.prototype.getYoutubeVideoData = function() {
  return /** @type{?proto.jungletv.EnqueueYouTubeVideoData} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.EnqueueYouTubeVideoData, 3));
};


/**
 * @param {?proto.jungletv.EnqueueYouTubeVideoData|undefined} value
 * @return {!proto.jungletv.EnqueueMediaRequest} returns this
*/
proto.jungletv.EnqueueMediaRequest.prototype.setYoutubeVideoData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.jungletv.EnqueueMediaRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.EnqueueMediaRequest} returns this
 */
proto.jungletv.EnqueueMediaRequest.prototype.clearYoutubeVideoData = function() {
  return this.setYoutubeVideoData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaRequest.prototype.hasYoutubeVideoData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.jungletv.EnqueueMediaResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.jungletv.EnqueueMediaResponse.EnqueueResponseCase = {
  ENQUEUE_RESPONSE_NOT_SET: 0,
  TICKET: 1,
  FAILURE: 2
};

/**
 * @return {proto.jungletv.EnqueueMediaResponse.EnqueueResponseCase}
 */
proto.jungletv.EnqueueMediaResponse.prototype.getEnqueueResponseCase = function() {
  return /** @type {proto.jungletv.EnqueueMediaResponse.EnqueueResponseCase} */(jspb.Message.computeOneofCase(this, proto.jungletv.EnqueueMediaResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.EnqueueMediaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.EnqueueMediaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.EnqueueMediaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueMediaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticket: (f = msg.getTicket()) && proto.jungletv.EnqueueMediaTicket.toObject(includeInstance, f),
    failure: (f = msg.getFailure()) && proto.jungletv.EnqueueMediaFailure.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.EnqueueMediaResponse}
 */
proto.jungletv.EnqueueMediaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.EnqueueMediaResponse;
  return proto.jungletv.EnqueueMediaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.EnqueueMediaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.EnqueueMediaResponse}
 */
proto.jungletv.EnqueueMediaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.jungletv.EnqueueMediaTicket;
      reader.readMessage(value,proto.jungletv.EnqueueMediaTicket.deserializeBinaryFromReader);
      msg.setTicket(value);
      break;
    case 2:
      var value = new proto.jungletv.EnqueueMediaFailure;
      reader.readMessage(value,proto.jungletv.EnqueueMediaFailure.deserializeBinaryFromReader);
      msg.setFailure(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.EnqueueMediaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.EnqueueMediaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.EnqueueMediaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueMediaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicket();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.jungletv.EnqueueMediaTicket.serializeBinaryToWriter
    );
  }
  f = message.getFailure();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.jungletv.EnqueueMediaFailure.serializeBinaryToWriter
    );
  }
};


/**
 * optional EnqueueMediaTicket ticket = 1;
 * @return {?proto.jungletv.EnqueueMediaTicket}
 */
proto.jungletv.EnqueueMediaResponse.prototype.getTicket = function() {
  return /** @type{?proto.jungletv.EnqueueMediaTicket} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.EnqueueMediaTicket, 1));
};


/**
 * @param {?proto.jungletv.EnqueueMediaTicket|undefined} value
 * @return {!proto.jungletv.EnqueueMediaResponse} returns this
*/
proto.jungletv.EnqueueMediaResponse.prototype.setTicket = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.jungletv.EnqueueMediaResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.EnqueueMediaResponse} returns this
 */
proto.jungletv.EnqueueMediaResponse.prototype.clearTicket = function() {
  return this.setTicket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaResponse.prototype.hasTicket = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EnqueueMediaFailure failure = 2;
 * @return {?proto.jungletv.EnqueueMediaFailure}
 */
proto.jungletv.EnqueueMediaResponse.prototype.getFailure = function() {
  return /** @type{?proto.jungletv.EnqueueMediaFailure} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.EnqueueMediaFailure, 2));
};


/**
 * @param {?proto.jungletv.EnqueueMediaFailure|undefined} value
 * @return {!proto.jungletv.EnqueueMediaResponse} returns this
*/
proto.jungletv.EnqueueMediaResponse.prototype.setFailure = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.jungletv.EnqueueMediaResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.EnqueueMediaResponse} returns this
 */
proto.jungletv.EnqueueMediaResponse.prototype.clearFailure = function() {
  return this.setFailure(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaResponse.prototype.hasFailure = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.EnqueueMediaFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.EnqueueMediaFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.EnqueueMediaFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueMediaFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    failureReason: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.EnqueueMediaFailure}
 */
proto.jungletv.EnqueueMediaFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.EnqueueMediaFailure;
  return proto.jungletv.EnqueueMediaFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.EnqueueMediaFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.EnqueueMediaFailure}
 */
proto.jungletv.EnqueueMediaFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailureReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.EnqueueMediaFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.EnqueueMediaFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.EnqueueMediaFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueMediaFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailureReason();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string failure_reason = 1;
 * @return {string}
 */
proto.jungletv.EnqueueMediaFailure.prototype.getFailureReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.EnqueueMediaFailure} returns this
 */
proto.jungletv.EnqueueMediaFailure.prototype.setFailureReason = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.jungletv.EnqueueMediaTicket.oneofGroups_ = [[10]];

/**
 * @enum {number}
 */
proto.jungletv.EnqueueMediaTicket.MediaInfoCase = {
  MEDIA_INFO_NOT_SET: 0,
  YOUTUBE_VIDEO_DATA: 10
};

/**
 * @return {proto.jungletv.EnqueueMediaTicket.MediaInfoCase}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getMediaInfoCase = function() {
  return /** @type {proto.jungletv.EnqueueMediaTicket.MediaInfoCase} */(jspb.Message.computeOneofCase(this, proto.jungletv.EnqueueMediaTicket.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.EnqueueMediaTicket.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.EnqueueMediaTicket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.EnqueueMediaTicket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueMediaTicket.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    paymentAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    enqueuePrice: jspb.Message.getFieldWithDefault(msg, 4, ""),
    playNextPrice: jspb.Message.getFieldWithDefault(msg, 5, ""),
    playNowPrice: jspb.Message.getFieldWithDefault(msg, 6, ""),
    expiration: (f = msg.getExpiration()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    unskippable: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    currentlyPlayingIsUnskippable: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    youtubeVideoData: (f = msg.getYoutubeVideoData()) && proto.jungletv.QueueYouTubeVideoData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.EnqueueMediaTicket}
 */
proto.jungletv.EnqueueMediaTicket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.EnqueueMediaTicket;
  return proto.jungletv.EnqueueMediaTicket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.EnqueueMediaTicket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.EnqueueMediaTicket}
 */
proto.jungletv.EnqueueMediaTicket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.jungletv.EnqueueMediaTicketStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnqueuePrice(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayNextPrice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayNowPrice(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiration(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnskippable(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCurrentlyPlayingIsUnskippable(value);
      break;
    case 10:
      var value = new proto.jungletv.QueueYouTubeVideoData;
      reader.readMessage(value,proto.jungletv.QueueYouTubeVideoData.deserializeBinaryFromReader);
      msg.setYoutubeVideoData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.EnqueueMediaTicket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.EnqueueMediaTicket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.EnqueueMediaTicket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.EnqueueMediaTicket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPaymentAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEnqueuePrice();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlayNextPrice();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPlayNowPrice();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getExpiration();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUnskippable();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getCurrentlyPlayingIsUnskippable();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getYoutubeVideoData();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.jungletv.QueueYouTubeVideoData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EnqueueMediaTicketStatus status = 2;
 * @return {!proto.jungletv.EnqueueMediaTicketStatus}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getStatus = function() {
  return /** @type {!proto.jungletv.EnqueueMediaTicketStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.jungletv.EnqueueMediaTicketStatus} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string payment_address = 3;
 * @return {string}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getPaymentAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.setPaymentAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string enqueue_price = 4;
 * @return {string}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getEnqueuePrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.setEnqueuePrice = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string play_next_price = 5;
 * @return {string}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getPlayNextPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.setPlayNextPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string play_now_price = 6;
 * @return {string}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getPlayNowPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.setPlayNowPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp expiration = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getExpiration = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
*/
proto.jungletv.EnqueueMediaTicket.prototype.setExpiration = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.clearExpiration = function() {
  return this.setExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaTicket.prototype.hasExpiration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool unskippable = 8;
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getUnskippable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.setUnskippable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool currently_playing_is_unskippable = 9;
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getCurrentlyPlayingIsUnskippable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.setCurrentlyPlayingIsUnskippable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional QueueYouTubeVideoData youtube_video_data = 10;
 * @return {?proto.jungletv.QueueYouTubeVideoData}
 */
proto.jungletv.EnqueueMediaTicket.prototype.getYoutubeVideoData = function() {
  return /** @type{?proto.jungletv.QueueYouTubeVideoData} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.QueueYouTubeVideoData, 10));
};


/**
 * @param {?proto.jungletv.QueueYouTubeVideoData|undefined} value
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
*/
proto.jungletv.EnqueueMediaTicket.prototype.setYoutubeVideoData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.jungletv.EnqueueMediaTicket.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.EnqueueMediaTicket} returns this
 */
proto.jungletv.EnqueueMediaTicket.prototype.clearYoutubeVideoData = function() {
  return this.setYoutubeVideoData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.EnqueueMediaTicket.prototype.hasYoutubeVideoData = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.MonitorTicketRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.MonitorTicketRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.MonitorTicketRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.MonitorTicketRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.MonitorTicketRequest}
 */
proto.jungletv.MonitorTicketRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.MonitorTicketRequest;
  return proto.jungletv.MonitorTicketRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.MonitorTicketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.MonitorTicketRequest}
 */
proto.jungletv.MonitorTicketRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.MonitorTicketRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.MonitorTicketRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.MonitorTicketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.MonitorTicketRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string ticket_id = 1;
 * @return {string}
 */
proto.jungletv.MonitorTicketRequest.prototype.getTicketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.MonitorTicketRequest} returns this
 */
proto.jungletv.MonitorTicketRequest.prototype.setTicketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.ConsumeMediaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.ConsumeMediaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.ConsumeMediaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.ConsumeMediaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.ConsumeMediaRequest}
 */
proto.jungletv.ConsumeMediaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.ConsumeMediaRequest;
  return proto.jungletv.ConsumeMediaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.ConsumeMediaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.ConsumeMediaRequest}
 */
proto.jungletv.ConsumeMediaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.ConsumeMediaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.ConsumeMediaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.ConsumeMediaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.ConsumeMediaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.NowPlayingStubData.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.NowPlayingStubData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.NowPlayingStubData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.NowPlayingStubData.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.NowPlayingStubData}
 */
proto.jungletv.NowPlayingStubData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.NowPlayingStubData;
  return proto.jungletv.NowPlayingStubData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.NowPlayingStubData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.NowPlayingStubData}
 */
proto.jungletv.NowPlayingStubData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.NowPlayingStubData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.NowPlayingStubData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.NowPlayingStubData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.NowPlayingStubData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.NowPlayingYouTubeVideoData.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.NowPlayingYouTubeVideoData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.NowPlayingYouTubeVideoData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.NowPlayingYouTubeVideoData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.NowPlayingYouTubeVideoData}
 */
proto.jungletv.NowPlayingYouTubeVideoData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.NowPlayingYouTubeVideoData;
  return proto.jungletv.NowPlayingYouTubeVideoData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.NowPlayingYouTubeVideoData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.NowPlayingYouTubeVideoData}
 */
proto.jungletv.NowPlayingYouTubeVideoData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.NowPlayingYouTubeVideoData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.NowPlayingYouTubeVideoData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.NowPlayingYouTubeVideoData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.NowPlayingYouTubeVideoData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.jungletv.NowPlayingYouTubeVideoData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.NowPlayingYouTubeVideoData} returns this
 */
proto.jungletv.NowPlayingYouTubeVideoData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.jungletv.MediaConsumptionCheckpoint.oneofGroups_ = [[9,10]];

/**
 * @enum {number}
 */
proto.jungletv.MediaConsumptionCheckpoint.MediaInfoCase = {
  MEDIA_INFO_NOT_SET: 0,
  STUB_DATA: 9,
  YOUTUBE_VIDEO_DATA: 10
};

/**
 * @return {proto.jungletv.MediaConsumptionCheckpoint.MediaInfoCase}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getMediaInfoCase = function() {
  return /** @type {proto.jungletv.MediaConsumptionCheckpoint.MediaInfoCase} */(jspb.Message.computeOneofCase(this, proto.jungletv.MediaConsumptionCheckpoint.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.MediaConsumptionCheckpoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.MediaConsumptionCheckpoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.MediaConsumptionCheckpoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    mediaPresent: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    currentPosition: (f = msg.getCurrentPosition()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    requestedBy: (f = msg.getRequestedBy()) && proto.jungletv.User.toObject(includeInstance, f),
    requestCost: jspb.Message.getFieldWithDefault(msg, 4, ""),
    currentlyWatching: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reward: jspb.Message.getFieldWithDefault(msg, 6, ""),
    activityChallenge: jspb.Message.getFieldWithDefault(msg, 7, ""),
    stubData: (f = msg.getStubData()) && proto.jungletv.NowPlayingStubData.toObject(includeInstance, f),
    youtubeVideoData: (f = msg.getYoutubeVideoData()) && proto.jungletv.NowPlayingYouTubeVideoData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.MediaConsumptionCheckpoint}
 */
proto.jungletv.MediaConsumptionCheckpoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.MediaConsumptionCheckpoint;
  return proto.jungletv.MediaConsumptionCheckpoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.MediaConsumptionCheckpoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.MediaConsumptionCheckpoint}
 */
proto.jungletv.MediaConsumptionCheckpoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMediaPresent(value);
      break;
    case 2:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setCurrentPosition(value);
      break;
    case 3:
      var value = new proto.jungletv.User;
      reader.readMessage(value,proto.jungletv.User.deserializeBinaryFromReader);
      msg.setRequestedBy(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestCost(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCurrentlyWatching(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivityChallenge(value);
      break;
    case 9:
      var value = new proto.jungletv.NowPlayingStubData;
      reader.readMessage(value,proto.jungletv.NowPlayingStubData.deserializeBinaryFromReader);
      msg.setStubData(value);
      break;
    case 10:
      var value = new proto.jungletv.NowPlayingYouTubeVideoData;
      reader.readMessage(value,proto.jungletv.NowPlayingYouTubeVideoData.deserializeBinaryFromReader);
      msg.setYoutubeVideoData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.MediaConsumptionCheckpoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.MediaConsumptionCheckpoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.MediaConsumptionCheckpoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMediaPresent();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getCurrentPosition();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getRequestedBy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.jungletv.User.serializeBinaryToWriter
    );
  }
  f = message.getRequestCost();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCurrentlyWatching();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStubData();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.jungletv.NowPlayingStubData.serializeBinaryToWriter
    );
  }
  f = message.getYoutubeVideoData();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.jungletv.NowPlayingYouTubeVideoData.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool media_present = 1;
 * @return {boolean}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getMediaPresent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.setMediaPresent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional google.protobuf.Duration current_position = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getCurrentPosition = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
*/
proto.jungletv.MediaConsumptionCheckpoint.prototype.setCurrentPosition = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.clearCurrentPosition = function() {
  return this.setCurrentPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.hasCurrentPosition = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User requested_by = 3;
 * @return {?proto.jungletv.User}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getRequestedBy = function() {
  return /** @type{?proto.jungletv.User} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.User, 3));
};


/**
 * @param {?proto.jungletv.User|undefined} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
*/
proto.jungletv.MediaConsumptionCheckpoint.prototype.setRequestedBy = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.clearRequestedBy = function() {
  return this.setRequestedBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.hasRequestedBy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string request_cost = 4;
 * @return {string}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getRequestCost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.setRequestCost = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 currently_watching = 5;
 * @return {number}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getCurrentlyWatching = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.setCurrentlyWatching = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string reward = 6;
 * @return {string}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getReward = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.setReward = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.clearReward = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.hasReward = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string activity_challenge = 7;
 * @return {string}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getActivityChallenge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.setActivityChallenge = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.clearActivityChallenge = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.hasActivityChallenge = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional NowPlayingStubData stub_data = 9;
 * @return {?proto.jungletv.NowPlayingStubData}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getStubData = function() {
  return /** @type{?proto.jungletv.NowPlayingStubData} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.NowPlayingStubData, 9));
};


/**
 * @param {?proto.jungletv.NowPlayingStubData|undefined} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
*/
proto.jungletv.MediaConsumptionCheckpoint.prototype.setStubData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.jungletv.MediaConsumptionCheckpoint.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.clearStubData = function() {
  return this.setStubData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.hasStubData = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional NowPlayingYouTubeVideoData youtube_video_data = 10;
 * @return {?proto.jungletv.NowPlayingYouTubeVideoData}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.getYoutubeVideoData = function() {
  return /** @type{?proto.jungletv.NowPlayingYouTubeVideoData} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.NowPlayingYouTubeVideoData, 10));
};


/**
 * @param {?proto.jungletv.NowPlayingYouTubeVideoData|undefined} value
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
*/
proto.jungletv.MediaConsumptionCheckpoint.prototype.setYoutubeVideoData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.jungletv.MediaConsumptionCheckpoint.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.MediaConsumptionCheckpoint} returns this
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.clearYoutubeVideoData = function() {
  return this.setYoutubeVideoData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.MediaConsumptionCheckpoint.prototype.hasYoutubeVideoData = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.MonitorQueueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.MonitorQueueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.MonitorQueueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.MonitorQueueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.MonitorQueueRequest}
 */
proto.jungletv.MonitorQueueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.MonitorQueueRequest;
  return proto.jungletv.MonitorQueueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.MonitorQueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.MonitorQueueRequest}
 */
proto.jungletv.MonitorQueueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.MonitorQueueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.MonitorQueueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.MonitorQueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.MonitorQueueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jungletv.Queue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.Queue.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.Queue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.Queue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.Queue.toObject = function(includeInstance, msg) {
  var f, obj = {
    entriesList: jspb.Message.toObjectList(msg.getEntriesList(),
    proto.jungletv.QueueEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.Queue}
 */
proto.jungletv.Queue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.Queue;
  return proto.jungletv.Queue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.Queue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.Queue}
 */
proto.jungletv.Queue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.jungletv.QueueEntry;
      reader.readMessage(value,proto.jungletv.QueueEntry.deserializeBinaryFromReader);
      msg.addEntries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.Queue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.Queue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.Queue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.Queue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.jungletv.QueueEntry.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueueEntry entries = 1;
 * @return {!Array<!proto.jungletv.QueueEntry>}
 */
proto.jungletv.Queue.prototype.getEntriesList = function() {
  return /** @type{!Array<!proto.jungletv.QueueEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jungletv.QueueEntry, 1));
};


/**
 * @param {!Array<!proto.jungletv.QueueEntry>} value
 * @return {!proto.jungletv.Queue} returns this
*/
proto.jungletv.Queue.prototype.setEntriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.jungletv.QueueEntry=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jungletv.QueueEntry}
 */
proto.jungletv.Queue.prototype.addEntries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.jungletv.QueueEntry, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jungletv.Queue} returns this
 */
proto.jungletv.Queue.prototype.clearEntriesList = function() {
  return this.setEntriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.QueueYouTubeVideoData.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.QueueYouTubeVideoData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.QueueYouTubeVideoData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.QueueYouTubeVideoData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    thumbnailUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelTitle: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.QueueYouTubeVideoData}
 */
proto.jungletv.QueueYouTubeVideoData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.QueueYouTubeVideoData;
  return proto.jungletv.QueueYouTubeVideoData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.QueueYouTubeVideoData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.QueueYouTubeVideoData}
 */
proto.jungletv.QueueYouTubeVideoData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnailUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.QueueYouTubeVideoData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.QueueYouTubeVideoData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.QueueYouTubeVideoData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.QueueYouTubeVideoData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getThumbnailUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.jungletv.QueueYouTubeVideoData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.QueueYouTubeVideoData} returns this
 */
proto.jungletv.QueueYouTubeVideoData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.jungletv.QueueYouTubeVideoData.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.QueueYouTubeVideoData} returns this
 */
proto.jungletv.QueueYouTubeVideoData.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string thumbnail_url = 3;
 * @return {string}
 */
proto.jungletv.QueueYouTubeVideoData.prototype.getThumbnailUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.QueueYouTubeVideoData} returns this
 */
proto.jungletv.QueueYouTubeVideoData.prototype.setThumbnailUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string channel_title = 4;
 * @return {string}
 */
proto.jungletv.QueueYouTubeVideoData.prototype.getChannelTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.QueueYouTubeVideoData} returns this
 */
proto.jungletv.QueueYouTubeVideoData.prototype.setChannelTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.jungletv.QueueEntry.oneofGroups_ = [[5]];

/**
 * @enum {number}
 */
proto.jungletv.QueueEntry.MediaInfoCase = {
  MEDIA_INFO_NOT_SET: 0,
  YOUTUBE_VIDEO_DATA: 5
};

/**
 * @return {proto.jungletv.QueueEntry.MediaInfoCase}
 */
proto.jungletv.QueueEntry.prototype.getMediaInfoCase = function() {
  return /** @type {proto.jungletv.QueueEntry.MediaInfoCase} */(jspb.Message.computeOneofCase(this, proto.jungletv.QueueEntry.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.QueueEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.QueueEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.QueueEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.QueueEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requestedBy: (f = msg.getRequestedBy()) && proto.jungletv.User.toObject(includeInstance, f),
    length: (f = msg.getLength()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    unskippable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    youtubeVideoData: (f = msg.getYoutubeVideoData()) && proto.jungletv.QueueYouTubeVideoData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.QueueEntry}
 */
proto.jungletv.QueueEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.QueueEntry;
  return proto.jungletv.QueueEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.QueueEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.QueueEntry}
 */
proto.jungletv.QueueEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.jungletv.User;
      reader.readMessage(value,proto.jungletv.User.deserializeBinaryFromReader);
      msg.setRequestedBy(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setLength(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnskippable(value);
      break;
    case 5:
      var value = new proto.jungletv.QueueYouTubeVideoData;
      reader.readMessage(value,proto.jungletv.QueueYouTubeVideoData.deserializeBinaryFromReader);
      msg.setYoutubeVideoData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.QueueEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.QueueEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.QueueEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.QueueEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequestedBy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.jungletv.User.serializeBinaryToWriter
    );
  }
  f = message.getLength();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getUnskippable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getYoutubeVideoData();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.jungletv.QueueYouTubeVideoData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.jungletv.QueueEntry.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.QueueEntry} returns this
 */
proto.jungletv.QueueEntry.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional User requested_by = 2;
 * @return {?proto.jungletv.User}
 */
proto.jungletv.QueueEntry.prototype.getRequestedBy = function() {
  return /** @type{?proto.jungletv.User} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.User, 2));
};


/**
 * @param {?proto.jungletv.User|undefined} value
 * @return {!proto.jungletv.QueueEntry} returns this
*/
proto.jungletv.QueueEntry.prototype.setRequestedBy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.QueueEntry} returns this
 */
proto.jungletv.QueueEntry.prototype.clearRequestedBy = function() {
  return this.setRequestedBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.QueueEntry.prototype.hasRequestedBy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Duration length = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.jungletv.QueueEntry.prototype.getLength = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.jungletv.QueueEntry} returns this
*/
proto.jungletv.QueueEntry.prototype.setLength = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.QueueEntry} returns this
 */
proto.jungletv.QueueEntry.prototype.clearLength = function() {
  return this.setLength(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.QueueEntry.prototype.hasLength = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool unskippable = 4;
 * @return {boolean}
 */
proto.jungletv.QueueEntry.prototype.getUnskippable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.jungletv.QueueEntry} returns this
 */
proto.jungletv.QueueEntry.prototype.setUnskippable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional QueueYouTubeVideoData youtube_video_data = 5;
 * @return {?proto.jungletv.QueueYouTubeVideoData}
 */
proto.jungletv.QueueEntry.prototype.getYoutubeVideoData = function() {
  return /** @type{?proto.jungletv.QueueYouTubeVideoData} */ (
    jspb.Message.getWrapperField(this, proto.jungletv.QueueYouTubeVideoData, 5));
};


/**
 * @param {?proto.jungletv.QueueYouTubeVideoData|undefined} value
 * @return {!proto.jungletv.QueueEntry} returns this
*/
proto.jungletv.QueueEntry.prototype.setYoutubeVideoData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.jungletv.QueueEntry.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jungletv.QueueEntry} returns this
 */
proto.jungletv.QueueEntry.prototype.clearYoutubeVideoData = function() {
  return this.setYoutubeVideoData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jungletv.QueueEntry.prototype.hasYoutubeVideoData = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.User.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.User}
 */
proto.jungletv.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.User;
  return proto.jungletv.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.User}
 */
proto.jungletv.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.jungletv.User.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.User} returns this
 */
proto.jungletv.User.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.RewardInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.RewardInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.RewardInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.RewardInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.RewardInfoRequest}
 */
proto.jungletv.RewardInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.RewardInfoRequest;
  return proto.jungletv.RewardInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.RewardInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.RewardInfoRequest}
 */
proto.jungletv.RewardInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.RewardInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.RewardInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.RewardInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.RewardInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.RewardInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.RewardInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.RewardInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.RewardInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rewardAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.RewardInfoResponse}
 */
proto.jungletv.RewardInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.RewardInfoResponse;
  return proto.jungletv.RewardInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.RewardInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.RewardInfoResponse}
 */
proto.jungletv.RewardInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.RewardInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.RewardInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.RewardInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.RewardInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewardAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string reward_address = 1;
 * @return {string}
 */
proto.jungletv.RewardInfoResponse.prototype.getRewardAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.RewardInfoResponse} returns this
 */
proto.jungletv.RewardInfoResponse.prototype.setRewardAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.RemoveQueueEntryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.RemoveQueueEntryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.RemoveQueueEntryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.RemoveQueueEntryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.RemoveQueueEntryRequest}
 */
proto.jungletv.RemoveQueueEntryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.RemoveQueueEntryRequest;
  return proto.jungletv.RemoveQueueEntryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.RemoveQueueEntryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.RemoveQueueEntryRequest}
 */
proto.jungletv.RemoveQueueEntryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.RemoveQueueEntryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.RemoveQueueEntryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.RemoveQueueEntryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.RemoveQueueEntryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.jungletv.RemoveQueueEntryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.RemoveQueueEntryRequest} returns this
 */
proto.jungletv.RemoveQueueEntryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.RemoveQueueEntryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.RemoveQueueEntryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.RemoveQueueEntryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.RemoveQueueEntryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.RemoveQueueEntryResponse}
 */
proto.jungletv.RemoveQueueEntryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.RemoveQueueEntryResponse;
  return proto.jungletv.RemoveQueueEntryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.RemoveQueueEntryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.RemoveQueueEntryResponse}
 */
proto.jungletv.RemoveQueueEntryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.RemoveQueueEntryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.RemoveQueueEntryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.RemoveQueueEntryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.RemoveQueueEntryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.ForciblyEnqueueTicketRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.ForciblyEnqueueTicketRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.ForciblyEnqueueTicketRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.ForciblyEnqueueTicketRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    enqueueType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.ForciblyEnqueueTicketRequest}
 */
proto.jungletv.ForciblyEnqueueTicketRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.ForciblyEnqueueTicketRequest;
  return proto.jungletv.ForciblyEnqueueTicketRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.ForciblyEnqueueTicketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.ForciblyEnqueueTicketRequest}
 */
proto.jungletv.ForciblyEnqueueTicketRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.jungletv.ForcedTicketEnqueueType} */ (reader.readEnum());
      msg.setEnqueueType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.ForciblyEnqueueTicketRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.ForciblyEnqueueTicketRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.ForciblyEnqueueTicketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.ForciblyEnqueueTicketRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEnqueueType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.jungletv.ForciblyEnqueueTicketRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.ForciblyEnqueueTicketRequest} returns this
 */
proto.jungletv.ForciblyEnqueueTicketRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ForcedTicketEnqueueType enqueue_type = 2;
 * @return {!proto.jungletv.ForcedTicketEnqueueType}
 */
proto.jungletv.ForciblyEnqueueTicketRequest.prototype.getEnqueueType = function() {
  return /** @type {!proto.jungletv.ForcedTicketEnqueueType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.jungletv.ForcedTicketEnqueueType} value
 * @return {!proto.jungletv.ForciblyEnqueueTicketRequest} returns this
 */
proto.jungletv.ForciblyEnqueueTicketRequest.prototype.setEnqueueType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.ForciblyEnqueueTicketResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.ForciblyEnqueueTicketResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.ForciblyEnqueueTicketResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.ForciblyEnqueueTicketResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.ForciblyEnqueueTicketResponse}
 */
proto.jungletv.ForciblyEnqueueTicketResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.ForciblyEnqueueTicketResponse;
  return proto.jungletv.ForciblyEnqueueTicketResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.ForciblyEnqueueTicketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.ForciblyEnqueueTicketResponse}
 */
proto.jungletv.ForciblyEnqueueTicketResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.ForciblyEnqueueTicketResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.ForciblyEnqueueTicketResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.ForciblyEnqueueTicketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.ForciblyEnqueueTicketResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.SubmitActivityChallengeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.SubmitActivityChallengeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.SubmitActivityChallengeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.SubmitActivityChallengeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    challenge: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.SubmitActivityChallengeRequest}
 */
proto.jungletv.SubmitActivityChallengeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.SubmitActivityChallengeRequest;
  return proto.jungletv.SubmitActivityChallengeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.SubmitActivityChallengeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.SubmitActivityChallengeRequest}
 */
proto.jungletv.SubmitActivityChallengeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setChallenge(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.SubmitActivityChallengeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.SubmitActivityChallengeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.SubmitActivityChallengeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.SubmitActivityChallengeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChallenge();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string challenge = 1;
 * @return {string}
 */
proto.jungletv.SubmitActivityChallengeRequest.prototype.getChallenge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jungletv.SubmitActivityChallengeRequest} returns this
 */
proto.jungletv.SubmitActivityChallengeRequest.prototype.setChallenge = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jungletv.SubmitActivityChallengeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.jungletv.SubmitActivityChallengeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jungletv.SubmitActivityChallengeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.SubmitActivityChallengeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jungletv.SubmitActivityChallengeResponse}
 */
proto.jungletv.SubmitActivityChallengeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jungletv.SubmitActivityChallengeResponse;
  return proto.jungletv.SubmitActivityChallengeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jungletv.SubmitActivityChallengeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jungletv.SubmitActivityChallengeResponse}
 */
proto.jungletv.SubmitActivityChallengeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jungletv.SubmitActivityChallengeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jungletv.SubmitActivityChallengeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jungletv.SubmitActivityChallengeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jungletv.SubmitActivityChallengeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.jungletv.EnqueueMediaTicketStatus = {
  ACTIVE: 0,
  PAID: 1,
  EXPIRED: 2
};

/**
 * @enum {number}
 */
proto.jungletv.ForcedTicketEnqueueType = {
  ENQUEUE: 0,
  PLAY_NEXT: 1,
  PLAY_NOW: 2
};

goog.object.extend(exports, proto.jungletv);
