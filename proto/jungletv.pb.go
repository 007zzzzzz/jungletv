// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.0
// source: jungletv.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EnqueueMediaTicketStatus int32

const (
	EnqueueMediaTicketStatus_ACTIVE  EnqueueMediaTicketStatus = 0
	EnqueueMediaTicketStatus_PAID    EnqueueMediaTicketStatus = 1
	EnqueueMediaTicketStatus_EXPIRED EnqueueMediaTicketStatus = 2
)

// Enum value maps for EnqueueMediaTicketStatus.
var (
	EnqueueMediaTicketStatus_name = map[int32]string{
		0: "ACTIVE",
		1: "PAID",
		2: "EXPIRED",
	}
	EnqueueMediaTicketStatus_value = map[string]int32{
		"ACTIVE":  0,
		"PAID":    1,
		"EXPIRED": 2,
	}
)

func (x EnqueueMediaTicketStatus) Enum() *EnqueueMediaTicketStatus {
	p := new(EnqueueMediaTicketStatus)
	*p = x
	return p
}

func (x EnqueueMediaTicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnqueueMediaTicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_jungletv_proto_enumTypes[0].Descriptor()
}

func (EnqueueMediaTicketStatus) Type() protoreflect.EnumType {
	return &file_jungletv_proto_enumTypes[0]
}

func (x EnqueueMediaTicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnqueueMediaTicketStatus.Descriptor instead.
func (EnqueueMediaTicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{0}
}

type ForcedTicketEnqueueType int32

const (
	ForcedTicketEnqueueType_ENQUEUE   ForcedTicketEnqueueType = 0
	ForcedTicketEnqueueType_PLAY_NEXT ForcedTicketEnqueueType = 1
	ForcedTicketEnqueueType_PLAY_NOW  ForcedTicketEnqueueType = 2
)

// Enum value maps for ForcedTicketEnqueueType.
var (
	ForcedTicketEnqueueType_name = map[int32]string{
		0: "ENQUEUE",
		1: "PLAY_NEXT",
		2: "PLAY_NOW",
	}
	ForcedTicketEnqueueType_value = map[string]int32{
		"ENQUEUE":   0,
		"PLAY_NEXT": 1,
		"PLAY_NOW":  2,
	}
)

func (x ForcedTicketEnqueueType) Enum() *ForcedTicketEnqueueType {
	p := new(ForcedTicketEnqueueType)
	*p = x
	return p
}

func (x ForcedTicketEnqueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ForcedTicketEnqueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_jungletv_proto_enumTypes[1].Descriptor()
}

func (ForcedTicketEnqueueType) Type() protoreflect.EnumType {
	return &file_jungletv_proto_enumTypes[1]
}

func (x ForcedTicketEnqueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ForcedTicketEnqueueType.Descriptor instead.
func (ForcedTicketEnqueueType) EnumDescriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{1}
}

type SignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardAddress string `protobuf:"bytes,1,opt,name=reward_address,json=rewardAddress,proto3" json:"reward_address,omitempty"`
}

func (x *SignInRequest) Reset() {
	*x = SignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest) ProtoMessage() {}

func (x *SignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest.ProtoReflect.Descriptor instead.
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{0}
}

func (x *SignInRequest) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

type SignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthToken       string                 `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	TokenExpiration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=token_expiration,json=tokenExpiration,proto3" json:"token_expiration,omitempty"`
}

func (x *SignInResponse) Reset() {
	*x = SignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInResponse) ProtoMessage() {}

func (x *SignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInResponse.ProtoReflect.Descriptor instead.
func (*SignInResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{1}
}

func (x *SignInResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *SignInResponse) GetTokenExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.TokenExpiration
	}
	return nil
}

type EnqueueYouTubeVideoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EnqueueYouTubeVideoData) Reset() {
	*x = EnqueueYouTubeVideoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueYouTubeVideoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueYouTubeVideoData) ProtoMessage() {}

func (x *EnqueueYouTubeVideoData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueYouTubeVideoData.ProtoReflect.Descriptor instead.
func (*EnqueueYouTubeVideoData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{2}
}

func (x *EnqueueYouTubeVideoData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// EnqueueStubData allows us to prepare and confirm that polymorphism is working properly
type EnqueueStubData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnqueueStubData) Reset() {
	*x = EnqueueStubData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueStubData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueStubData) ProtoMessage() {}

func (x *EnqueueStubData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueStubData.ProtoReflect.Descriptor instead.
func (*EnqueueStubData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{3}
}

type EnqueueMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unskippable bool `protobuf:"varint,1,opt,name=unskippable,proto3" json:"unskippable,omitempty"`
	// Types that are assignable to MediaInfo:
	//	*EnqueueMediaRequest_StubData
	//	*EnqueueMediaRequest_YoutubeVideoData
	MediaInfo isEnqueueMediaRequest_MediaInfo `protobuf_oneof:"media_info"`
}

func (x *EnqueueMediaRequest) Reset() {
	*x = EnqueueMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMediaRequest) ProtoMessage() {}

func (x *EnqueueMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMediaRequest.ProtoReflect.Descriptor instead.
func (*EnqueueMediaRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{4}
}

func (x *EnqueueMediaRequest) GetUnskippable() bool {
	if x != nil {
		return x.Unskippable
	}
	return false
}

func (m *EnqueueMediaRequest) GetMediaInfo() isEnqueueMediaRequest_MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (x *EnqueueMediaRequest) GetStubData() *EnqueueStubData {
	if x, ok := x.GetMediaInfo().(*EnqueueMediaRequest_StubData); ok {
		return x.StubData
	}
	return nil
}

func (x *EnqueueMediaRequest) GetYoutubeVideoData() *EnqueueYouTubeVideoData {
	if x, ok := x.GetMediaInfo().(*EnqueueMediaRequest_YoutubeVideoData); ok {
		return x.YoutubeVideoData
	}
	return nil
}

type isEnqueueMediaRequest_MediaInfo interface {
	isEnqueueMediaRequest_MediaInfo()
}

type EnqueueMediaRequest_StubData struct {
	StubData *EnqueueStubData `protobuf:"bytes,2,opt,name=stub_data,json=stubData,proto3,oneof"`
}

type EnqueueMediaRequest_YoutubeVideoData struct {
	YoutubeVideoData *EnqueueYouTubeVideoData `protobuf:"bytes,3,opt,name=youtube_video_data,json=youtubeVideoData,proto3,oneof"`
}

func (*EnqueueMediaRequest_StubData) isEnqueueMediaRequest_MediaInfo() {}

func (*EnqueueMediaRequest_YoutubeVideoData) isEnqueueMediaRequest_MediaInfo() {}

type EnqueueMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to EnqueueResponse:
	//	*EnqueueMediaResponse_Ticket
	//	*EnqueueMediaResponse_Failure
	EnqueueResponse isEnqueueMediaResponse_EnqueueResponse `protobuf_oneof:"enqueue_response"`
}

func (x *EnqueueMediaResponse) Reset() {
	*x = EnqueueMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMediaResponse) ProtoMessage() {}

func (x *EnqueueMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMediaResponse.ProtoReflect.Descriptor instead.
func (*EnqueueMediaResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{5}
}

func (m *EnqueueMediaResponse) GetEnqueueResponse() isEnqueueMediaResponse_EnqueueResponse {
	if m != nil {
		return m.EnqueueResponse
	}
	return nil
}

func (x *EnqueueMediaResponse) GetTicket() *EnqueueMediaTicket {
	if x, ok := x.GetEnqueueResponse().(*EnqueueMediaResponse_Ticket); ok {
		return x.Ticket
	}
	return nil
}

func (x *EnqueueMediaResponse) GetFailure() *EnqueueMediaFailure {
	if x, ok := x.GetEnqueueResponse().(*EnqueueMediaResponse_Failure); ok {
		return x.Failure
	}
	return nil
}

type isEnqueueMediaResponse_EnqueueResponse interface {
	isEnqueueMediaResponse_EnqueueResponse()
}

type EnqueueMediaResponse_Ticket struct {
	Ticket *EnqueueMediaTicket `protobuf:"bytes,1,opt,name=ticket,proto3,oneof"`
}

type EnqueueMediaResponse_Failure struct {
	Failure *EnqueueMediaFailure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*EnqueueMediaResponse_Ticket) isEnqueueMediaResponse_EnqueueResponse() {}

func (*EnqueueMediaResponse_Failure) isEnqueueMediaResponse_EnqueueResponse() {}

type EnqueueMediaFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailureReason string `protobuf:"bytes,1,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
}

func (x *EnqueueMediaFailure) Reset() {
	*x = EnqueueMediaFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueMediaFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMediaFailure) ProtoMessage() {}

func (x *EnqueueMediaFailure) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMediaFailure.ProtoReflect.Descriptor instead.
func (*EnqueueMediaFailure) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{6}
}

func (x *EnqueueMediaFailure) GetFailureReason() string {
	if x != nil {
		return x.FailureReason
	}
	return ""
}

type EnqueueMediaTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                            string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                        EnqueueMediaTicketStatus `protobuf:"varint,2,opt,name=status,proto3,enum=jungletv.EnqueueMediaTicketStatus" json:"status,omitempty"`
	PaymentAddress                string                   `protobuf:"bytes,3,opt,name=payment_address,json=paymentAddress,proto3" json:"payment_address,omitempty"`
	EnqueuePrice                  string                   `protobuf:"bytes,4,opt,name=enqueue_price,json=enqueuePrice,proto3" json:"enqueue_price,omitempty"`
	PlayNextPrice                 string                   `protobuf:"bytes,5,opt,name=play_next_price,json=playNextPrice,proto3" json:"play_next_price,omitempty"`
	PlayNowPrice                  string                   `protobuf:"bytes,6,opt,name=play_now_price,json=playNowPrice,proto3" json:"play_now_price,omitempty"`
	Expiration                    *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=expiration,proto3" json:"expiration,omitempty"`
	Unskippable                   bool                     `protobuf:"varint,8,opt,name=unskippable,proto3" json:"unskippable,omitempty"`
	CurrentlyPlayingIsUnskippable bool                     `protobuf:"varint,9,opt,name=currently_playing_is_unskippable,json=currentlyPlayingIsUnskippable,proto3" json:"currently_playing_is_unskippable,omitempty"`
	// Types that are assignable to MediaInfo:
	//	*EnqueueMediaTicket_YoutubeVideoData
	MediaInfo isEnqueueMediaTicket_MediaInfo `protobuf_oneof:"media_info"`
}

func (x *EnqueueMediaTicket) Reset() {
	*x = EnqueueMediaTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnqueueMediaTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnqueueMediaTicket) ProtoMessage() {}

func (x *EnqueueMediaTicket) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnqueueMediaTicket.ProtoReflect.Descriptor instead.
func (*EnqueueMediaTicket) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{7}
}

func (x *EnqueueMediaTicket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EnqueueMediaTicket) GetStatus() EnqueueMediaTicketStatus {
	if x != nil {
		return x.Status
	}
	return EnqueueMediaTicketStatus_ACTIVE
}

func (x *EnqueueMediaTicket) GetPaymentAddress() string {
	if x != nil {
		return x.PaymentAddress
	}
	return ""
}

func (x *EnqueueMediaTicket) GetEnqueuePrice() string {
	if x != nil {
		return x.EnqueuePrice
	}
	return ""
}

func (x *EnqueueMediaTicket) GetPlayNextPrice() string {
	if x != nil {
		return x.PlayNextPrice
	}
	return ""
}

func (x *EnqueueMediaTicket) GetPlayNowPrice() string {
	if x != nil {
		return x.PlayNowPrice
	}
	return ""
}

func (x *EnqueueMediaTicket) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

func (x *EnqueueMediaTicket) GetUnskippable() bool {
	if x != nil {
		return x.Unskippable
	}
	return false
}

func (x *EnqueueMediaTicket) GetCurrentlyPlayingIsUnskippable() bool {
	if x != nil {
		return x.CurrentlyPlayingIsUnskippable
	}
	return false
}

func (m *EnqueueMediaTicket) GetMediaInfo() isEnqueueMediaTicket_MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (x *EnqueueMediaTicket) GetYoutubeVideoData() *QueueYouTubeVideoData {
	if x, ok := x.GetMediaInfo().(*EnqueueMediaTicket_YoutubeVideoData); ok {
		return x.YoutubeVideoData
	}
	return nil
}

type isEnqueueMediaTicket_MediaInfo interface {
	isEnqueueMediaTicket_MediaInfo()
}

type EnqueueMediaTicket_YoutubeVideoData struct {
	YoutubeVideoData *QueueYouTubeVideoData `protobuf:"bytes,10,opt,name=youtube_video_data,json=youtubeVideoData,proto3,oneof"`
}

func (*EnqueueMediaTicket_YoutubeVideoData) isEnqueueMediaTicket_MediaInfo() {}

type MonitorTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
}

func (x *MonitorTicketRequest) Reset() {
	*x = MonitorTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorTicketRequest) ProtoMessage() {}

func (x *MonitorTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorTicketRequest.ProtoReflect.Descriptor instead.
func (*MonitorTicketRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{8}
}

func (x *MonitorTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type ConsumeMediaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConsumeMediaRequest) Reset() {
	*x = ConsumeMediaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumeMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumeMediaRequest) ProtoMessage() {}

func (x *ConsumeMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumeMediaRequest.ProtoReflect.Descriptor instead.
func (*ConsumeMediaRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{9}
}

// NowPlayingStubData allows us to prepare and confirm that polymorphism is working properly
type NowPlayingStubData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NowPlayingStubData) Reset() {
	*x = NowPlayingStubData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NowPlayingStubData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NowPlayingStubData) ProtoMessage() {}

func (x *NowPlayingStubData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NowPlayingStubData.ProtoReflect.Descriptor instead.
func (*NowPlayingStubData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{10}
}

type NowPlayingYouTubeVideoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NowPlayingYouTubeVideoData) Reset() {
	*x = NowPlayingYouTubeVideoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NowPlayingYouTubeVideoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NowPlayingYouTubeVideoData) ProtoMessage() {}

func (x *NowPlayingYouTubeVideoData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NowPlayingYouTubeVideoData.ProtoReflect.Descriptor instead.
func (*NowPlayingYouTubeVideoData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{11}
}

func (x *NowPlayingYouTubeVideoData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NowPlayingCheckpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaPresent      bool                 `protobuf:"varint,1,opt,name=media_present,json=mediaPresent,proto3" json:"media_present,omitempty"`
	CurrentPosition   *durationpb.Duration `protobuf:"bytes,2,opt,name=current_position,json=currentPosition,proto3" json:"current_position,omitempty"`
	RequestedBy       *User                `protobuf:"bytes,3,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	RequestCost       string               `protobuf:"bytes,4,opt,name=request_cost,json=requestCost,proto3" json:"request_cost,omitempty"`
	Reward            *string              `protobuf:"bytes,5,opt,name=reward,proto3,oneof" json:"reward,omitempty"`
	CurrentlyWatching uint32               `protobuf:"varint,6,opt,name=currently_watching,json=currentlyWatching,proto3" json:"currently_watching,omitempty"`
	// Types that are assignable to MediaInfo:
	//	*NowPlayingCheckpoint_StubData
	//	*NowPlayingCheckpoint_YoutubeVideoData
	MediaInfo isNowPlayingCheckpoint_MediaInfo `protobuf_oneof:"media_info"`
}

func (x *NowPlayingCheckpoint) Reset() {
	*x = NowPlayingCheckpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NowPlayingCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NowPlayingCheckpoint) ProtoMessage() {}

func (x *NowPlayingCheckpoint) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NowPlayingCheckpoint.ProtoReflect.Descriptor instead.
func (*NowPlayingCheckpoint) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{12}
}

func (x *NowPlayingCheckpoint) GetMediaPresent() bool {
	if x != nil {
		return x.MediaPresent
	}
	return false
}

func (x *NowPlayingCheckpoint) GetCurrentPosition() *durationpb.Duration {
	if x != nil {
		return x.CurrentPosition
	}
	return nil
}

func (x *NowPlayingCheckpoint) GetRequestedBy() *User {
	if x != nil {
		return x.RequestedBy
	}
	return nil
}

func (x *NowPlayingCheckpoint) GetRequestCost() string {
	if x != nil {
		return x.RequestCost
	}
	return ""
}

func (x *NowPlayingCheckpoint) GetReward() string {
	if x != nil && x.Reward != nil {
		return *x.Reward
	}
	return ""
}

func (x *NowPlayingCheckpoint) GetCurrentlyWatching() uint32 {
	if x != nil {
		return x.CurrentlyWatching
	}
	return 0
}

func (m *NowPlayingCheckpoint) GetMediaInfo() isNowPlayingCheckpoint_MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (x *NowPlayingCheckpoint) GetStubData() *NowPlayingStubData {
	if x, ok := x.GetMediaInfo().(*NowPlayingCheckpoint_StubData); ok {
		return x.StubData
	}
	return nil
}

func (x *NowPlayingCheckpoint) GetYoutubeVideoData() *NowPlayingYouTubeVideoData {
	if x, ok := x.GetMediaInfo().(*NowPlayingCheckpoint_YoutubeVideoData); ok {
		return x.YoutubeVideoData
	}
	return nil
}

type isNowPlayingCheckpoint_MediaInfo interface {
	isNowPlayingCheckpoint_MediaInfo()
}

type NowPlayingCheckpoint_StubData struct {
	StubData *NowPlayingStubData `protobuf:"bytes,7,opt,name=stub_data,json=stubData,proto3,oneof"`
}

type NowPlayingCheckpoint_YoutubeVideoData struct {
	YoutubeVideoData *NowPlayingYouTubeVideoData `protobuf:"bytes,8,opt,name=youtube_video_data,json=youtubeVideoData,proto3,oneof"`
}

func (*NowPlayingCheckpoint_StubData) isNowPlayingCheckpoint_MediaInfo() {}

func (*NowPlayingCheckpoint_YoutubeVideoData) isNowPlayingCheckpoint_MediaInfo() {}

type MonitorQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MonitorQueueRequest) Reset() {
	*x = MonitorQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonitorQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorQueueRequest) ProtoMessage() {}

func (x *MonitorQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorQueueRequest.ProtoReflect.Descriptor instead.
func (*MonitorQueueRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{13}
}

type Queue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*QueueEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *Queue) Reset() {
	*x = Queue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Queue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Queue) ProtoMessage() {}

func (x *Queue) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Queue.ProtoReflect.Descriptor instead.
func (*Queue) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{14}
}

func (x *Queue) GetEntries() []*QueueEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type QueueYouTubeVideoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ThumbnailUrl string `protobuf:"bytes,3,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	ChannelTitle string `protobuf:"bytes,4,opt,name=channel_title,json=channelTitle,proto3" json:"channel_title,omitempty"`
}

func (x *QueueYouTubeVideoData) Reset() {
	*x = QueueYouTubeVideoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueYouTubeVideoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueYouTubeVideoData) ProtoMessage() {}

func (x *QueueYouTubeVideoData) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueYouTubeVideoData.ProtoReflect.Descriptor instead.
func (*QueueYouTubeVideoData) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{15}
}

func (x *QueueYouTubeVideoData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueueYouTubeVideoData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QueueYouTubeVideoData) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *QueueYouTubeVideoData) GetChannelTitle() string {
	if x != nil {
		return x.ChannelTitle
	}
	return ""
}

type QueueEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RequestedBy *User                `protobuf:"bytes,2,opt,name=requested_by,json=requestedBy,proto3" json:"requested_by,omitempty"`
	Length      *durationpb.Duration `protobuf:"bytes,3,opt,name=length,proto3" json:"length,omitempty"`
	Unskippable bool                 `protobuf:"varint,4,opt,name=unskippable,proto3" json:"unskippable,omitempty"`
	// Types that are assignable to MediaInfo:
	//	*QueueEntry_YoutubeVideoData
	MediaInfo isQueueEntry_MediaInfo `protobuf_oneof:"media_info"`
}

func (x *QueueEntry) Reset() {
	*x = QueueEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueEntry) ProtoMessage() {}

func (x *QueueEntry) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueEntry.ProtoReflect.Descriptor instead.
func (*QueueEntry) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{16}
}

func (x *QueueEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueueEntry) GetRequestedBy() *User {
	if x != nil {
		return x.RequestedBy
	}
	return nil
}

func (x *QueueEntry) GetLength() *durationpb.Duration {
	if x != nil {
		return x.Length
	}
	return nil
}

func (x *QueueEntry) GetUnskippable() bool {
	if x != nil {
		return x.Unskippable
	}
	return false
}

func (m *QueueEntry) GetMediaInfo() isQueueEntry_MediaInfo {
	if m != nil {
		return m.MediaInfo
	}
	return nil
}

func (x *QueueEntry) GetYoutubeVideoData() *QueueYouTubeVideoData {
	if x, ok := x.GetMediaInfo().(*QueueEntry_YoutubeVideoData); ok {
		return x.YoutubeVideoData
	}
	return nil
}

type isQueueEntry_MediaInfo interface {
	isQueueEntry_MediaInfo()
}

type QueueEntry_YoutubeVideoData struct {
	YoutubeVideoData *QueueYouTubeVideoData `protobuf:"bytes,5,opt,name=youtube_video_data,json=youtubeVideoData,proto3,oneof"`
}

func (*QueueEntry_YoutubeVideoData) isQueueEntry_MediaInfo() {}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{17}
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RewardInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RewardInfoRequest) Reset() {
	*x = RewardInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardInfoRequest) ProtoMessage() {}

func (x *RewardInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardInfoRequest.ProtoReflect.Descriptor instead.
func (*RewardInfoRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{18}
}

type RewardInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardAddress string `protobuf:"bytes,1,opt,name=reward_address,json=rewardAddress,proto3" json:"reward_address,omitempty"`
}

func (x *RewardInfoResponse) Reset() {
	*x = RewardInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RewardInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardInfoResponse) ProtoMessage() {}

func (x *RewardInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardInfoResponse.ProtoReflect.Descriptor instead.
func (*RewardInfoResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{19}
}

func (x *RewardInfoResponse) GetRewardAddress() string {
	if x != nil {
		return x.RewardAddress
	}
	return ""
}

type RemoveQueueEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveQueueEntryRequest) Reset() {
	*x = RemoveQueueEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQueueEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQueueEntryRequest) ProtoMessage() {}

func (x *RemoveQueueEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQueueEntryRequest.ProtoReflect.Descriptor instead.
func (*RemoveQueueEntryRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveQueueEntryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RemoveQueueEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveQueueEntryResponse) Reset() {
	*x = RemoveQueueEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveQueueEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveQueueEntryResponse) ProtoMessage() {}

func (x *RemoveQueueEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveQueueEntryResponse.ProtoReflect.Descriptor instead.
func (*RemoveQueueEntryResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{21}
}

type ForciblyEnqueueTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EnqueueType ForcedTicketEnqueueType `protobuf:"varint,2,opt,name=enqueue_type,json=enqueueType,proto3,enum=jungletv.ForcedTicketEnqueueType" json:"enqueue_type,omitempty"`
}

func (x *ForciblyEnqueueTicketRequest) Reset() {
	*x = ForciblyEnqueueTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForciblyEnqueueTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForciblyEnqueueTicketRequest) ProtoMessage() {}

func (x *ForciblyEnqueueTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForciblyEnqueueTicketRequest.ProtoReflect.Descriptor instead.
func (*ForciblyEnqueueTicketRequest) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{22}
}

func (x *ForciblyEnqueueTicketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ForciblyEnqueueTicketRequest) GetEnqueueType() ForcedTicketEnqueueType {
	if x != nil {
		return x.EnqueueType
	}
	return ForcedTicketEnqueueType_ENQUEUE
}

type ForciblyEnqueueTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ForciblyEnqueueTicketResponse) Reset() {
	*x = ForciblyEnqueueTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jungletv_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForciblyEnqueueTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForciblyEnqueueTicketResponse) ProtoMessage() {}

func (x *ForciblyEnqueueTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jungletv_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForciblyEnqueueTicketResponse.ProtoReflect.Descriptor instead.
func (*ForciblyEnqueueTicketResponse) Descriptor() ([]byte, []int) {
	return file_jungletv_proto_rawDescGZIP(), []int{23}
}

var File_jungletv_proto protoreflect.FileDescriptor

var file_jungletv_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0d, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x76, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x45, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x17, 0x45,
	0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x74, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x13, 0x45, 0x6e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74,
	0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x75, 0x62, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a,
	0x12, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x59, 0x6f, 0x75, 0x54,
	0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x10,
	0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9d,
	0x01, 0x0a, 0x14, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x39, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x65, 0x6e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c,
	0x0a, 0x13, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x82, 0x04, 0x0a,
	0x12, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x45,
	0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x65, 0x78, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x6f,
	0x77, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69,
	0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e,
	0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x20, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x73, 0x5f, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x50, 0x6c,
	0x61, 0x79, 0x69, 0x6e, 0x67, 0x49, 0x73, 0x55, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x12, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x59,
	0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x10, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x33, 0x0a, 0x14, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a,
	0x12, 0x4e, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x75, 0x62, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x1a, 0x4e, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e,
	0x67, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xcf, 0x03, 0x0a, 0x14, 0x4e, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12,
	0x44, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x75,
	0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x6c, 0x79, 0x5f, 0x77, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x3b, 0x0a, 0x09, 0x73, 0x74, 0x75, 0x62, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6a, 0x75, 0x6e,
	0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x4e, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x75, 0x62, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x75, 0x62,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x12, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x4e, 0x6f, 0x77, 0x50,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x10, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62,
	0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x05, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x75, 0x65, 0x59, 0x6f, 0x75,
	0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x83, 0x02,
	0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x31, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x6e, 0x73, 0x6b, 0x69, 0x70, 0x70,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x12, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x59, 0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x10, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x20, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x12, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74,
	0x0a, 0x1c, 0x46, 0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44,
	0x0a, 0x0c, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x65, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x46, 0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79,
	0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x3d, 0x0a, 0x18, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x50, 0x41, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52,
	0x45, 0x44, 0x10, 0x02, 0x2a, 0x43, 0x0a, 0x17, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x51, 0x55, 0x45, 0x55, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x50, 0x4c, 0x41, 0x59, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x4c, 0x41, 0x59, 0x5f, 0x4e, 0x4f, 0x57, 0x10, 0x02, 0x32, 0x98, 0x05, 0x0a, 0x08, 0x4a, 0x75,
	0x6e, 0x67, 0x6c, 0x65, 0x54, 0x56, 0x12, 0x3d, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x12, 0x17, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76,
	0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e,
	0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x76, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65,
	0x74, 0x76, 0x2e, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x51, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1d, 0x2e, 0x6a, 0x75, 0x6e, 0x67,
	0x6c, 0x65, 0x74, 0x76, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c,
	0x65, 0x74, 0x76, 0x2e, 0x4e, 0x6f, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x0c,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1d, 0x2e, 0x6a,
	0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x6a, 0x75,
	0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x49, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6a, 0x75,
	0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x46,
	0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e,
	0x46, 0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79, 0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6a,
	0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x69, 0x62, 0x6c, 0x79,
	0x45, 0x6e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x6a, 0x75,
	0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74, 0x76, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x6e, 0x79, 0x69, 0x6d, 0x2f, 0x6a, 0x75, 0x6e, 0x67, 0x6c, 0x65, 0x74,
	0x76, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jungletv_proto_rawDescOnce sync.Once
	file_jungletv_proto_rawDescData = file_jungletv_proto_rawDesc
)

func file_jungletv_proto_rawDescGZIP() []byte {
	file_jungletv_proto_rawDescOnce.Do(func() {
		file_jungletv_proto_rawDescData = protoimpl.X.CompressGZIP(file_jungletv_proto_rawDescData)
	})
	return file_jungletv_proto_rawDescData
}

var file_jungletv_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_jungletv_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_jungletv_proto_goTypes = []interface{}{
	(EnqueueMediaTicketStatus)(0),         // 0: jungletv.EnqueueMediaTicketStatus
	(ForcedTicketEnqueueType)(0),          // 1: jungletv.ForcedTicketEnqueueType
	(*SignInRequest)(nil),                 // 2: jungletv.SignInRequest
	(*SignInResponse)(nil),                // 3: jungletv.SignInResponse
	(*EnqueueYouTubeVideoData)(nil),       // 4: jungletv.EnqueueYouTubeVideoData
	(*EnqueueStubData)(nil),               // 5: jungletv.EnqueueStubData
	(*EnqueueMediaRequest)(nil),           // 6: jungletv.EnqueueMediaRequest
	(*EnqueueMediaResponse)(nil),          // 7: jungletv.EnqueueMediaResponse
	(*EnqueueMediaFailure)(nil),           // 8: jungletv.EnqueueMediaFailure
	(*EnqueueMediaTicket)(nil),            // 9: jungletv.EnqueueMediaTicket
	(*MonitorTicketRequest)(nil),          // 10: jungletv.MonitorTicketRequest
	(*ConsumeMediaRequest)(nil),           // 11: jungletv.ConsumeMediaRequest
	(*NowPlayingStubData)(nil),            // 12: jungletv.NowPlayingStubData
	(*NowPlayingYouTubeVideoData)(nil),    // 13: jungletv.NowPlayingYouTubeVideoData
	(*NowPlayingCheckpoint)(nil),          // 14: jungletv.NowPlayingCheckpoint
	(*MonitorQueueRequest)(nil),           // 15: jungletv.MonitorQueueRequest
	(*Queue)(nil),                         // 16: jungletv.Queue
	(*QueueYouTubeVideoData)(nil),         // 17: jungletv.QueueYouTubeVideoData
	(*QueueEntry)(nil),                    // 18: jungletv.QueueEntry
	(*User)(nil),                          // 19: jungletv.User
	(*RewardInfoRequest)(nil),             // 20: jungletv.RewardInfoRequest
	(*RewardInfoResponse)(nil),            // 21: jungletv.RewardInfoResponse
	(*RemoveQueueEntryRequest)(nil),       // 22: jungletv.RemoveQueueEntryRequest
	(*RemoveQueueEntryResponse)(nil),      // 23: jungletv.RemoveQueueEntryResponse
	(*ForciblyEnqueueTicketRequest)(nil),  // 24: jungletv.ForciblyEnqueueTicketRequest
	(*ForciblyEnqueueTicketResponse)(nil), // 25: jungletv.ForciblyEnqueueTicketResponse
	(*timestamppb.Timestamp)(nil),         // 26: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),           // 27: google.protobuf.Duration
}
var file_jungletv_proto_depIdxs = []int32{
	26, // 0: jungletv.SignInResponse.token_expiration:type_name -> google.protobuf.Timestamp
	5,  // 1: jungletv.EnqueueMediaRequest.stub_data:type_name -> jungletv.EnqueueStubData
	4,  // 2: jungletv.EnqueueMediaRequest.youtube_video_data:type_name -> jungletv.EnqueueYouTubeVideoData
	9,  // 3: jungletv.EnqueueMediaResponse.ticket:type_name -> jungletv.EnqueueMediaTicket
	8,  // 4: jungletv.EnqueueMediaResponse.failure:type_name -> jungletv.EnqueueMediaFailure
	0,  // 5: jungletv.EnqueueMediaTicket.status:type_name -> jungletv.EnqueueMediaTicketStatus
	26, // 6: jungletv.EnqueueMediaTicket.expiration:type_name -> google.protobuf.Timestamp
	17, // 7: jungletv.EnqueueMediaTicket.youtube_video_data:type_name -> jungletv.QueueYouTubeVideoData
	27, // 8: jungletv.NowPlayingCheckpoint.current_position:type_name -> google.protobuf.Duration
	19, // 9: jungletv.NowPlayingCheckpoint.requested_by:type_name -> jungletv.User
	12, // 10: jungletv.NowPlayingCheckpoint.stub_data:type_name -> jungletv.NowPlayingStubData
	13, // 11: jungletv.NowPlayingCheckpoint.youtube_video_data:type_name -> jungletv.NowPlayingYouTubeVideoData
	18, // 12: jungletv.Queue.entries:type_name -> jungletv.QueueEntry
	19, // 13: jungletv.QueueEntry.requested_by:type_name -> jungletv.User
	27, // 14: jungletv.QueueEntry.length:type_name -> google.protobuf.Duration
	17, // 15: jungletv.QueueEntry.youtube_video_data:type_name -> jungletv.QueueYouTubeVideoData
	1,  // 16: jungletv.ForciblyEnqueueTicketRequest.enqueue_type:type_name -> jungletv.ForcedTicketEnqueueType
	2,  // 17: jungletv.JungleTV.SignIn:input_type -> jungletv.SignInRequest
	6,  // 18: jungletv.JungleTV.EnqueueMedia:input_type -> jungletv.EnqueueMediaRequest
	10, // 19: jungletv.JungleTV.MonitorTicket:input_type -> jungletv.MonitorTicketRequest
	11, // 20: jungletv.JungleTV.ConsumeMedia:input_type -> jungletv.ConsumeMediaRequest
	15, // 21: jungletv.JungleTV.MonitorQueue:input_type -> jungletv.MonitorQueueRequest
	20, // 22: jungletv.JungleTV.RewardInfo:input_type -> jungletv.RewardInfoRequest
	24, // 23: jungletv.JungleTV.ForciblyEnqueueTicket:input_type -> jungletv.ForciblyEnqueueTicketRequest
	22, // 24: jungletv.JungleTV.RemoveQueueEntry:input_type -> jungletv.RemoveQueueEntryRequest
	3,  // 25: jungletv.JungleTV.SignIn:output_type -> jungletv.SignInResponse
	7,  // 26: jungletv.JungleTV.EnqueueMedia:output_type -> jungletv.EnqueueMediaResponse
	9,  // 27: jungletv.JungleTV.MonitorTicket:output_type -> jungletv.EnqueueMediaTicket
	14, // 28: jungletv.JungleTV.ConsumeMedia:output_type -> jungletv.NowPlayingCheckpoint
	16, // 29: jungletv.JungleTV.MonitorQueue:output_type -> jungletv.Queue
	21, // 30: jungletv.JungleTV.RewardInfo:output_type -> jungletv.RewardInfoResponse
	25, // 31: jungletv.JungleTV.ForciblyEnqueueTicket:output_type -> jungletv.ForciblyEnqueueTicketResponse
	23, // 32: jungletv.JungleTV.RemoveQueueEntry:output_type -> jungletv.RemoveQueueEntryResponse
	25, // [25:33] is the sub-list for method output_type
	17, // [17:25] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_jungletv_proto_init() }
func file_jungletv_proto_init() {
	if File_jungletv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jungletv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueYouTubeVideoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueStubData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueMediaFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnqueueMediaTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumeMediaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NowPlayingStubData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NowPlayingYouTubeVideoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NowPlayingCheckpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonitorQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Queue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueYouTubeVideoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RewardInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQueueEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveQueueEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForciblyEnqueueTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jungletv_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForciblyEnqueueTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jungletv_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*EnqueueMediaRequest_StubData)(nil),
		(*EnqueueMediaRequest_YoutubeVideoData)(nil),
	}
	file_jungletv_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*EnqueueMediaResponse_Ticket)(nil),
		(*EnqueueMediaResponse_Failure)(nil),
	}
	file_jungletv_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*EnqueueMediaTicket_YoutubeVideoData)(nil),
	}
	file_jungletv_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*NowPlayingCheckpoint_StubData)(nil),
		(*NowPlayingCheckpoint_YoutubeVideoData)(nil),
	}
	file_jungletv_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*QueueEntry_YoutubeVideoData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jungletv_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jungletv_proto_goTypes,
		DependencyIndexes: file_jungletv_proto_depIdxs,
		EnumInfos:         file_jungletv_proto_enumTypes,
		MessageInfos:      file_jungletv_proto_msgTypes,
	}.Build()
	File_jungletv_proto = out.File
	file_jungletv_proto_rawDesc = nil
	file_jungletv_proto_goTypes = nil
	file_jungletv_proto_depIdxs = nil
}
